{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\TAFE\\\\2021S1\\\\5WORK\\\\SourceCode\\\\FrontEnd\\\\CCDCFrontEnd\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport appConfig from './../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [calendarList, setCalendarList] = useState([]);\n  const [leadTimeInDays, setLeadTimeIndays] = useState(0);\n  const [excludeWeekendOption, setExcludeWeekendOption] = useState(false);\n  const [excludeHolidayOption, setExcludeHolidayOption] = useState(false);\n  const [newDate, setNewDate] = useState(\"\");\n  const baseURL = appConfig.BaseURL;\n\n  const calculateDate = () => {\n    if (excludeWeekendOption) {\n      if (!excludeHolidayOption) {\n        fetchNewDate(\"calculateNewDateExcludeWk\");\n      } else {\n        var request = new XMLHttpRequest();\n        request.open('POST', baseURL + 'calculateNewDateExcludeAll' + '?calendarCode=' + 'VIC' + '&processingDays=' + leadTimeInDays + '&startDate=' + '2021-03-13', true);\n\n        request.onload = function () {\n          var data = JSON.parse(this.response);\n\n          if (data != null) {\n            console.log(\"New date = \" + data);\n            setNewDate(data);\n          }\n        };\n\n        request.send();\n        document.getElementById(\"outputLabel\").style.display = \"block\";\n      }\n    } else {\n      // Not exclude anthing\n      fetchNewDate(\"calculateNewDate\");\n    }\n  };\n\n  const fetchNewDate = calculatedMethod => {\n    var request = new XMLHttpRequest();\n    request.open('POST', baseURL + calculatedMethod + '?startDate=' + '2021-03-13' + '&processingDays=' + leadTimeInDays, true);\n\n    request.onload = function () {\n      var data = JSON.parse(this.response);\n\n      if (data != null) {\n        console.log(\"New date = \" + data);\n        setNewDate(data);\n      }\n    };\n\n    request.send();\n    document.getElementById(\"outputLabel\").style.display = \"block\";\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    var request = new XMLHttpRequest();\n    request.open('GET', 'http://localhost:8080/api/calendars', true);\n\n    request.onload = function () {\n      var data = JSON.parse(this.response);\n\n      if (data != null) {\n        setCalendarList(data);\n      }\n    };\n\n    request.send();\n  };\n\n  const changeExcludeWeekendOption = () => {\n    setExcludeWeekendOption(!excludeWeekendOption);\n  };\n\n  const changeExcludeHolidayOption = () => {\n    setExcludeHolidayOption(!excludeHolidayOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"tabContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"pageTitle\",\n      children: \" Calculate the commit date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"infoText\",\n      children: \"Calculate the expected commit date based on the lead time in days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"tableStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        class: \"rowContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select a calendar to use:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"calendar\",\n            id: \"calendar\",\n            children: calendarList.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.calendarCode,\n              children: option.calendarName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        class: \"rowContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter the lead time in days: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"inputText\",\n            type: \"text\",\n            onChange: e => setLeadTimeIndays(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        class: \"rowContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Exclude Weekend in Calculation \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeExcludeWeekendOption()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        class: \"rowContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Exclude Holiday in Calculation \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeExcludeHolidayOption()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"calculateButton\",\n      type: \"button\",\n      value: \"Calculate commit date\",\n      onClick: () => calculateDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"outputLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" The New Commit Date based on above setting and calendar is \", newDate, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"oOkLhI/dP3S76Sc6KHaruqCXoFI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/TAFE/2021S1/5WORK/SourceCode/FrontEnd/CCDCFrontEnd/src/Pages/Home.js"],"names":["React","useEffect","useState","appConfig","Home","calendarList","setCalendarList","leadTimeInDays","setLeadTimeIndays","excludeWeekendOption","setExcludeWeekendOption","excludeHolidayOption","setExcludeHolidayOption","newDate","setNewDate","baseURL","BaseURL","calculateDate","fetchNewDate","request","XMLHttpRequest","open","onload","data","JSON","parse","response","console","log","send","document","getElementById","style","display","calculatedMethod","fetchData","changeExcludeWeekendOption","changeExcludeHolidayOption","map","option","index","calendarCode","calendarName","e","target","value"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport appConfig from './../config';\r\n\r\nfunction Home() {\r\n\r\n  const [calendarList, setCalendarList] = useState([]);\r\n  const [leadTimeInDays, setLeadTimeIndays] = useState(0);\r\n  const [excludeWeekendOption, setExcludeWeekendOption] = useState(false);\r\n  const [excludeHolidayOption, setExcludeHolidayOption] = useState(false);\r\n  const [newDate, setNewDate] = useState(\"\");\r\n\r\n  const baseURL = appConfig.BaseURL;\r\n\r\n  const calculateDate = () => {\r\n    if (excludeWeekendOption) {\r\n      if (!excludeHolidayOption) {\r\n        fetchNewDate(\"calculateNewDateExcludeWk\");\r\n      } else {\r\n        var request = new XMLHttpRequest();\r\n        request.open('POST', baseURL + 'calculateNewDateExcludeAll' + '?calendarCode=' + 'VIC'\r\n          + '&processingDays=' + leadTimeInDays + '&startDate=' + '2021-03-13', true)\r\n        request.onload = function () {\r\n          var data = JSON.parse(this.response);\r\n          if (data != null) {\r\n            console.log(\"New date = \" + data);\r\n            setNewDate(data); \r\n          }\r\n        }\r\n        request.send();\r\n        document.getElementById(\"outputLabel\").style.display = \"block\"; \r\n      }\r\n    } else {\r\n      // Not exclude anthing\r\n      fetchNewDate(\"calculateNewDate\");\r\n    }\r\n  }\r\n\r\n  const fetchNewDate = (calculatedMethod) => {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', baseURL + calculatedMethod + '?startDate='\r\n      + '2021-03-13' + '&processingDays=' + leadTimeInDays, true)\r\n    request.onload = function () {\r\n      var data = JSON.parse(this.response);\r\n      if (data != null) {\r\n        console.log(\"New date = \" + data);\r\n        setNewDate(data); \r\n      }\r\n    }\r\n    request.send();\r\n    document.getElementById(\"outputLabel\").style.display = \"block\"; \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', 'http://localhost:8080/api/calendars', true)\r\n    request.onload = function () {\r\n      var data = JSON.parse(this.response);\r\n      if (data != null) {\r\n        setCalendarList(data);\r\n      }\r\n    }\r\n    request.send()\r\n  }\r\n\r\n  const changeExcludeWeekendOption = () => {\r\n    setExcludeWeekendOption(!excludeWeekendOption);\r\n  }\r\n\r\n  const changeExcludeHolidayOption = () => {\r\n    setExcludeHolidayOption(!excludeHolidayOption);\r\n  }\r\n\r\n  return (\r\n    <div class=\"tabContainer\">\r\n      <div class=\"pageTitle\"> Calculate the commit date</div>\r\n      <div class=\"infoText\">Calculate the expected commit date based on the lead time in days</div>\r\n      <table class=\"tableStyle\">\r\n        <tr class=\"rowContainer\">\r\n          <td><label>Select a calendar to use:</label></td>\r\n          <td>\r\n            <select name=\"calendar\" id=\"calendar\">\r\n              {\r\n                calendarList.map((option, index) => (\r\n                  <option value={option.calendarCode} key={index}>{option.calendarName}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr class=\"rowContainer\">\r\n          <td>\r\n            <label>Enter the lead time in days: </label>\r\n          </td>\r\n          <td>\r\n            <input id=\"inputText\" type=\"text\" onChange={e => setLeadTimeIndays(e.target.value)}></input>\r\n          </td>\r\n        </tr>\r\n        <tr class=\"rowContainer\">\r\n          <td>\r\n            <label>Exclude Weekend in Calculation </label>\r\n          </td>\r\n          <td>\r\n            <input type=\"checkbox\" onClick={() => changeExcludeWeekendOption()} ></input>\r\n          </td>\r\n        </tr>\r\n        <tr class=\"rowContainer\">\r\n          <td>\r\n            <label>Exclude Holiday in Calculation </label>\r\n          </td>\r\n          <td>\r\n            <input type=\"checkbox\" onClick={() => changeExcludeHolidayOption()}></input>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <input id=\"calculateButton\" type=\"button\" value=\"Calculate commit date\" onClick={() => calculateDate()}></input>\r\n      <div id = \"outputLabel\">\r\n        <label> The New Commit Date based on above setting and calendar is {newDate} </label>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}